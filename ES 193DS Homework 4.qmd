---
title: "ES 193DS - homework 4"
format: html
author: Jasmine Toni
execute: 
  warning: false
  message: false
---

# ES 193DS Homework #4

Author: Jasmine Toni

Link to repository: <https://github.com/jasminetoni/ENVS-193DS_homework-04_Toni-Jasmine.git>

```{r set-up}
# should haves
library(tidyverse)
library(here)
library(lterdatasampler)

# would be nice to have
#install.packages("performance")
library(performance)
#install.packages("broom")
library(broom)
#install.packages("flextable")
library(flextable)
#install.packages("ggeffects")
library(ggeffects)
#install.packages("car")
library(car)
library(naniar)
```

```{r load-in-data}
#load in the data from the website
fish <- read_csv(
  here("data", "ntl6_v12.csv")
)
```

Filter the data

```{r filter-data}
#filter the data we downloaded to look at the variables we want
trout_perch <- fish %>%
  filter(spname == "TROUTPERCH")
```

# Problem 1

1.  **Mathematical Hypothesis:**

    Null Hypothesis (H₀): β₁ = 0 There is no linear relationship between fish length and fish weight for trout perch across all sample years.

    Alternative Hypothesis (Hₐ): β₁ **≠** 0 There is a linear relationship between fish length and fish weight for trout perch across all sample years.

    Biological Hypotheses:

    Null Hypothesis (H₀): Fish length does not predict fish weight for trout perch across all sample years.

    Alternative Hypothesis (Hₐ): Fish length predicts fish weight for trout perch across all sample years.

2.  **Create a visual for missing data**

    ```{r missing-data-vis}
    # making a visual to show all the variables with missing data
    gg_miss_var(trout_perch)
    ```

a. Caption

**Figure 1:** **Missing values visualization for trout perch data frame throughout all sample years**. The values on the x-axis are the amount of missing data points from each variable (sex, flag, fishpart, sampletype, weight). The values on the y-axis represent all of the missing data from the trout perch in the NTL LTER data.

b\. Relevance to hypothesis: the missing data is relevant to my hypothesis because there is some missing data in "weight", meaning that we will have some lengths without corresponding weights. This will creates problems because the data that I am observing will be incomplete and perhaps skew the results of the statistical tests and analysis.

3.  **Run your test**

```{r explore-data-vis}
# will show us our missing data visually (what categories everything is missing in)
ggplot(data = trout_perch, aes(x = length, y = weight)) +
  geom_point()
```

```{r linear-model-trout}
# making our linear model for the trout data
# will show us the intercept and length
trout_model <- lm(weight ~ length, data = trout_perch)

trout_model
```

4.  **Visually check your assumptions**

```{r checking-assumptions}
# checking the assumptions for the data
# make diagnostic plots
par(mfrow = c(2, 2))
plot(trout_model)
```

5.  **Diagnostic Plot Analysis**

Residuals vs Fitted Plot: This plot checks the linear relationship of the data and shows the red line (the mean of the dots and their line) fitting somewhat closely to the grey dotted line.

Normal Q-Q: This plot shows the points fitting on the grey dotted (expected line) very nicely, but tapering off a little bit at the end. This tells us that the data is relatively normally distributed.

Scale-Location: This plot tells us about the errors that should be constant between the models assumption of constant variance. In this case, it is homoskedasticity and indicates the variability is constant and the variability of the residuals is consistent across predicted values.

Residuals vs Leverage: This plot is a diagnostic plot used to assess the influence of individual data points on the regression model. Furthermore, Cook's distance demonstrates that a few outliers have skewed this plot and removing those specific observations could potentially have a substantial impact on the regression results.

6.  **Summary results - ANOVA Table**

```{r model-summary-table}
# store the model summary as an object
model_summary <- summary(trout_model)

# store the ANOVA table as an object
# anova(): special function to get analysis of variance tables for a model
model_squares <- anova(trout_model)
# run the code
model_summary
```

7.  **Creating a table to summarize ANOVA Table**

```{r}
# can't name this chunk!

model_squares_table <- tidy(model_squares) %>% 
  # round the sum of squares and mean squares columns to have 5 digits (could be less)
  mutate(across(sumsq:meansq, ~ round(.x, digits = 5))) %>% 
  # round the F-statistic to have one digit
  mutate(statistic = round(statistic, digits = 1)) %>% 
  # replace the very small p value with < 0.001
  mutate(p.value = case_when(
    p.value < 0.001 ~ "< 0.001"
  )) %>% 
  # rename the stem_length cell to be meaningful
  mutate(term = case_when(
    term == "length" ~ "Length (mm)",
    TRUE ~ term
  )) %>% 
  # make the data frame a flextable object
  flextable() %>% 
  # change the header labels to be meaningful
  set_header_labels(df = "Degrees of Freedom", 
                    sumsq = "Sum of squares",
                    meansq = "Mean squares",
                    statistic = "F-statistic",
                    p.value = "p-value")

model_squares_table
```

8.  The ANOVA table relates to the information that I get from summary() because both have the p-value (the summary() says it is 2.2e-16 and the table says it's \<0.001), F-statistic of 1281, and DF of 288. The difference is that summary() has residuals and coefficients whereas the ANOVA table has sum of squares and mean squares.

9.  The results showed that fish length is a highly significant predictor of fish weight for trout perch across all sample years (β = 0.199, p \< 2.2e-16). With this, the null hypothesis is rejected because the length of the fish was predicted the weight of the fish across all the sample years. The population size was 290 and the signifcance level was 95% or 0.05. Additionally, the model equation for these results mean that every millimeter of fish length increase, the weight would be predicted to increase 0.20 with a deviation of 0.006 grams. The length sum of squares (1,432) and mean squares (1,432) indicated that the variation in fish weight can be explained by the variation in fish length. Despite some unexplained variation represented by the residuals sum of squares (322.053) and mean squares (1.118), the model exhibited a strong fit (adjusted R-squared = 0.8158), demonstrating that fish length is reliable for predicting fish weight for trout perch in this study.

10. **Making a graph with predictions**

```{r pulling-out-predictions}
# extract model predictions using ggpredict
predictions <- ggpredict(trout_model, terms = "length")

predictions
```

```{r plotting-predictions}
plot_predictions <- ggplot(data = trout_perch, 
                           aes(x = length, y = weight)) +
  # first plot the underlying data from trout_perch
  geom_point() +
  # then plot the predictions
  geom_line(data = predictions, 
            aes(x = x, y = predicted), 
            color = "dodgerblue3", linewidth = 1) +
  # then plot the 95% confidence interval from ggpredict
  geom_ribbon(data = predictions, 
              aes(x = x, y = predicted, ymin = conf.low, ymax = conf.high), 
              alpha = 0.2) +
  # theme and meaningful labels
  theme_light() +
  theme(
    # change font to Times New Roman
     text = element_text(family = "Times New Roman")) +
  labs(x = "Length (mm)",
       y = "Weight (g)",
  title = "Trout Perch Data as a Prediction for Fish Length Relating Back to Fish Weight")

plot_predictions
```

a\. Caption

**Figure 2:** **Prediction visualization for trout perch data frame throughout all sample years**. The values on the x-axis represent the length (mm) of the trout perch. The values on the y-axis represent the corresponding weights (g) from the trout perch NTL LTER data. The data points are close to the line of best fit for the linear regression line. Additionally, the confidence interval of the data is represented with a ribbon and widens out near the beginning and ends of the x & y axis.
